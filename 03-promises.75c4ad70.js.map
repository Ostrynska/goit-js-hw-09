{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,IAAKF,SAASC,cAAc,0BAgD9B,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxDbP,EAAKC,KAAKc,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACFjB,EAAKI,IAAIc,aAAa,YAAY,GAElC,MACEC,UAAYZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,IACvBN,EAAEO,cACN,IAAIC,EAAUC,OAAOL,EAAMM,OACvBC,EAASF,OAAOJ,EAAKK,OACrBE,EAAWH,OAAOH,EAAOI,OAE7B,MAAMG,EAAaL,EAAUG,EAASC,EAEtC,GACc,KAAZJ,GACW,KAAXG,GACa,KAAbC,GACAJ,GAAW,GACXG,GAAU,GACVC,GAAY,EAKZ,YAHAE,EAAAhC,GAASiC,OAAOC,QACd,0DAKJ,IAAK,IAAIC,EAAW,EAAGA,GAAYL,EAAUK,GAAY,EACvD5B,EAAc4B,EAAUT,GACrBU,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,KACjBuB,EAAAhC,GAASiC,OAAOI,QACd,uBAAqB7B,QAAiBC,SACrC6B,OAEJ,EAAO9B,WAAUC,WAChBuB,EAAAhC,GAAQiC,OAACC,QAAO,sBAAS1B,QAA8BC,SAE3DiB,GAAWG,EAqBQU,EAlBPR,EAmBdf,YAAW,KACTd,EAAKI,IAAIkC,gBAAgB,WAAW,GACnCD,GApBHrB,EAAEO,cAAcgB,QAiBlB,IAAuBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Loading } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  btn: document.querySelector('button[type=\"submit\"]'),\n};\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  refs.btn.setAttribute('disabled', true);\n\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  const totalDelay = delayEl + stepEl * amountEl;\n\n  if (\n    delayEl === '' ||\n    stepEl === '' ||\n    amountEl === '' ||\n    delayEl <= 0 ||\n    stepEl <= 0 ||\n    amountEl <= 0\n  ) {\n    Notiflix.Notify.failure(\n      'Please make sure all fields are filled in correctly!👎'\n    );\n    return;\n  }\n\n  for (let position = 1; position <= amountEl; position += 1) {\n    createPromise(position, delayEl)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delayEl += stepEl;\n  }\n\n  onBtnDisabled(totalDelay);\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onBtnDisabled(total) {\n  setTimeout(() => {\n    refs.btn.removeAttribute('disabled');\n  }, total);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","btn","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","addEventListener","e","preventDefault","setAttribute","elements","delay1","step","amount","currentTarget","delayEl","Number","value","stepEl","amountEl","totalDelay","$parcel$interopDefault","Notify","failure","position1","then","success","catch","total","removeAttribute","reset"],"version":3,"file":"03-promises.75c4ad70.js.map"}